{"version":3,"file":"meme-maker.umd.js","sources":["meme-maker.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from \"lit-element/lit-element.js\";\n/**\n * `meme-maker`\n * Connects lrndesign-gallery to HAX\n * @demo demo/index.html\n * @microcopy - the mental model for this element\n *  - go forth and make dank memes yo\n * @element meme-maker\n */\nclass MemeMaker extends LitElement {\n  static get styles() {\n    return [\n      css`\n        :host {\n          display: block;\n        }\n        * {\n          box-sizing: border-box;\n        }\n        figure {\n          position: relative;\n          width: 100%;\n          margin: 0;\n          padding: 0;\n          font-size: 20px;\n        }\n        img {\n          width: 100%;\n          height: auto;\n        }\n        .top-text,\n        .bottom-text {\n          position: absolute;\n          left: 0;\n          width: 100%;\n          padding: 3% 2%;\n          text-align: center;\n          text-transform: uppercase;\n          font-weight: 900;\n          font-family: \"Impact\", \"Arial Black\", \"sans serif\";\n          line-height: 1.2;\n          font-size: var(--meme-maker-font-size, 36px);\n          color: white;\n          text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\n            1px 1px 0 #000;\n          letter-spacing: 2px;\n        }\n        .top-text {\n          top: 0;\n        }\n        .bottom-text {\n          bottom: 0;\n        }\n        @media (max-width: 800px) {\n          .top-text,\n          .bottom-text {\n            font-size: var(--meme-maker-font-size-medium, 20px);\n          }\n        }\n        @media (max-width: 600px) {\n          .top-text,\n          .bottom-text {\n            font-size: var(--meme-maker-font-size-small, 20px);\n          }\n        }\n      `\n    ];\n  }\n  render() {\n    return html`\n      <figure>\n        <img loading=\"lazy\" src=\"${this.imageUrl}\" .alt=\"${this.alt}\" />\n        <figcaption class=\"top-text\">${this.topText}</figcaption>\n        <figcaption class=\"bottom-text\">${this.bottomText}</figcaption>\n      </figure>\n    `;\n  }\n  static get tag() {\n    return \"meme-maker\";\n  }\n  constructor() {\n    super();\n    this.alt = \"\";\n  }\n  static get properties() {\n    return {\n      /**\n       * Alt data passed down to appropriate tag\n       */\n      alt: {\n        type: String\n      },\n      /**\n       * url to the meme image\n       */\n      imageUrl: {\n        type: String,\n        attribute: \"image-url\",\n        reflect: true\n      },\n      /**\n       * Text on top of the image.\n       */\n      topText: {\n        type: String,\n        attribute: \"top-text\",\n        reflect: true\n      },\n      /**\n       * Bottom text for the image.\n       */\n      bottomText: {\n        type: String,\n        attribute: \"bottom-text\",\n        reflect: true\n      }\n    };\n  }\n  /**\n   * Hook for HAX to support progressive enhancement and return a string\n   * to place in the slot of this tag for RSS, bots and legacy formats\n   */\n  haxProgressiveEnhancement() {\n    return `\n    ${this.topText ? `<div>${this.topText}</div>` : \"\"}\n      <img src=\"${this.imageUrl}\" alt=\"${this.alt}\" preload=\"lazy\"/>\n    ${this.bottomText ? `<div>${this.bottomText}</div>` : \"\"}`;\n  }\n  /**\n   * Attached to the DOM, now fire.\n   */\n  static get haxProperties() {\n    return {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Meme\",\n        description: \"Make a meme out of an image\",\n        icon: \"editor:title\",\n        color: \"orange\",\n        groups: [\"Content\", \"Text\", \"Meme\", \"Funny\"],\n        handles: [\n          {\n            type: \"image\",\n            source: \"imageUrl\",\n            title: \"topText\",\n            author: \"bottomText\",\n            alt: \"alt\"\n          }\n        ],\n        meta: {\n          author: \"ELMS:LN\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"topText\",\n            title: \"Top text\",\n            description: \"Top text of the meme.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"bottomText\",\n            title: \"Bottom text\",\n            description: \"The date this was accessed.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"imageUrl\",\n            title: \"Source\",\n            description: \"The source url for the element this is citing.\",\n            inputMethod: \"haxupload\",\n            icon: \"link\"\n          },\n          {\n            property: \"topText\",\n            title: \"Top text\",\n            description: \"Top text of the meme.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"bottomText\",\n            title: \"Bottom text\",\n            description: \"The date this was accessed.\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        advanced: []\n      },\n      saveOptions: {\n        wipeSlot: true\n      }\n    };\n  }\n}\nwindow.customElements.define(MemeMaker.tag, MemeMaker);\nexport { MemeMaker };\n"],"names":["MemeMaker","alt","LitElement","html","this","imageUrl","topText","bottomText","css","type","String","attribute","reflect","canScale","canPosition","canEditSource","gizmo","title","description","icon","color","groups","handles","source","author","meta","settings","quick","property","inputMethod","configure","advanced","saveOptions","wipeSlot","window","customElements","define","tag"],"mappings":"mrFAaMA,yKAyEGC,IAAM,iPAzESC,yDA4DbC,WAEwBC,KAAKC,SAAmBD,KAAKH,IACzBG,KAAKE,QACFF,KAAKG,mDA9DpC,CACLC,8CAkEK,8FA8CLJ,KAAKE,uBAAkBF,KAAKE,kBAAkB,gCAClCF,KAAKC,2BAAkBD,KAAKH,uCACxCG,KAAKG,0BAAqBH,KAAKG,qBAAqB,+CAzC/C,CAILN,IAAK,CACHQ,KAAMC,QAKRL,SAAU,CACRI,KAAMC,OACNC,UAAW,YACXC,SAAS,GAKXN,QAAS,CACPG,KAAMC,OACNC,UAAW,WACXC,SAAS,GAKXL,WAAY,CACVE,KAAMC,OACNC,UAAW,cACXC,SAAS,gDAkBN,CACLC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,OACPC,YAAa,8BACbC,KAAM,eACNC,MAAO,SACPC,OAAQ,CAAC,UAAW,OAAQ,OAAQ,SACpCC,QAAS,CACP,CACEb,KAAM,QACNc,OAAQ,WACRN,MAAO,UACPO,OAAQ,aACRvB,IAAK,QAGTwB,KAAM,CACJD,OAAQ,YAGZE,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,UACVX,MAAO,WACPC,YAAa,wBACbW,YAAa,YACbV,KAAM,gBAER,CACES,SAAU,aACVX,MAAO,cACPC,YAAa,8BACbW,YAAa,YACbV,KAAM,iBAGVW,UAAW,CACT,CACEF,SAAU,WACVX,MAAO,SACPC,YAAa,iDACbW,YAAa,YACbV,KAAM,QAER,CACES,SAAU,UACVX,MAAO,WACPC,YAAa,wBACbW,YAAa,YACbV,KAAM,gBAER,CACES,SAAU,aACVX,MAAO,cACPC,YAAa,8BACbW,YAAa,YACbV,KAAM,iBAGVY,SAAU,IAEZC,YAAa,CACXC,UAAU,aAKlBC,OAAOC,eAAeC,OAAOpC,EAAUqC,IAAKrC"}